Algorithme TD14
(** Declarations **)
Type
  Date = Enregistrement
    j, m, a: Entier
  Fin Enregistrement

  Voyage = Enregistrement
    destination: char[20]
    d: Date
  Fin Enregistrement

  Client = Enregistrement
    identifiant: char[10]
    nom: char[10]
    prenom: char[10]
    NbVoy: Entier
    TV: *Voyage
  Fin Enregistrement

Var

(** Fonctions & Procédures **)

fonction RemplirVoyage(n: Entier): *Voyage
  Var
    i: Entier
    TV: *Voyage
  Debut
    TV <- allouer(n*taille(Voyage))
    Si (TV = Null) alors
      Ecrire("Espace insuffisante")
    Sinon
      Pour i de 1 à n faire
        Ecrire("Destination: ")
        Lire(TV[i].destination)
        Ecrire("Date: ")
        Lire(TV[i].d.j, TV[i].d.m, TV[i].d.a)
      Fin Pour
    Fin Si
    RemplirVoyage <- TV
  Fin

Procédure AfficheVoyage(TV: *Voyage, n: Entier)
  Var
    i: Entier
  Debut
    Pour i de 1 à n faire
      Ecrire(TV[i])
    Fin Pour
  Fin

Procédure AjoutVoyage(TV: *Voyage, n: *Entier, V: Voyage)
  Var
    P: *Voyage
  Debut
    P <- TV+(*n)
    Si (P = Null) alors
      Ecrire("Impossible d'ajouter")
    Sinon
      *P <- V
      (*n) <- (*n) + 1
    Fin Si
  Fin

Procédure SupprimeVoyage(TV: *Voyage, n: *Entier, V: Voyage)
  Var
    k, i: Entier
    trv: Booleen
  Debut
    trv <- Faux, k <- 0
    Tant que((k<(*n)) et (trv=Faux))
      Si (TV[k] = V) alors
        trv = Vrai
        Pour i de k à n-1 faire
          TV[i] <- TV[i+1]
        Fin Pour
        (*n) <- (*n) - 1
      Sinon
        k <- k + 1
      Fin Si
    Fin Tant que
  Fin

Fonction DestinationPréférée(TV: *Voyage, n: Entier): chaine
  Var
    
  Debut
    
  Fin





